/*
Copyright(C) thecodeway.com
*/
#ifndef _CYCLONE_CONFIG_H_
#define _CYCLONE_CONFIG_H_

#cmakedefine CY_HAVE_UNISTD_H 1
#cmakedefine CY_HAVE_INTTYPES_H 1
#cmakedefine CY_HAVE_SYS_UIO_H 1
#cmakedefine CY_HAVE_SYS_EVENTFD_H 1
#cmakedefine CY_HAVE_ATOMIC_H 1
#cmakedefine CY_HAVE_JEMALLOC_LIBRARIES 1

#cmakedefine CY_SYS_LINUX 1
#cmakedefine CY_SYS_WINDOWS 1
#cmakedefine CY_SYS_MACOS 1

#cmakedefine CY_HAVE_EPOLL 1
#cmakedefine CY_HAVE_SELECT 1
#cmakedefine CY_HAVE_READWRITE_V 1
#cmakedefine CY_HAVE_PIPE2 1

#cmakedefine CY_ENABLE_LOG 1

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <errno.h>

#ifdef CY_HAVE_UNISTD_H
#include <unistd.h>
#endif

#ifdef CY_HAVE_INTTYPES_H
#include <inttypes.h>
#endif

#ifdef CY_HAVE_SYS_TYPES
#include <sys/types.h>
#endif

#ifdef CY_HAVE_ATOMIC_H
#include <atomic>
#else
#include <cstdatomic>
#endif

#ifdef CY_HAVE_JEMALLOC_LIBRARIES
#include <jemalloc/jemalloc.h>
#define CY_MALLOC je_malloc
#define CY_FREE je_free
#else
#define CY_MALLOC malloc
#define CY_FREE free
#endif

#include <vector>
#include <list>
#include <set>
#include <unordered_map>

#ifdef CY_SYS_WINDOWS
	#define FD_SETSIZE (1024)
	#include <WinSock2.h>
	#include <Ws2tcpip.h>
	#include <Windows.h>
#else
	#include <sys/socket.h>
	#include <netinet/in.h>
	#include <arpa/inet.h>
#endif

#if defined (__LP64__) || defined (__64BIT__) || defined (_LP64) || (__WORDSIZE == 64) || defined(_WIN64)
	#define CY_64BIT 1
#endif

#ifdef CY_SYS_WINDOWS
	typedef SOCKET	socket_t;
	typedef uint32_t pid_t;

	#ifdef  _WIN64
		typedef signed __int64    ssize_t;
	#else
		typedef _W64 signed int   ssize_t;
	#endif
#else
	typedef int		socket_t;
	#ifndef INVALID_SOCKET
		#define INVALID_SOCKET	(-1)
	#endif
#endif

#ifndef MAX_PATH
	#define MAX_PATH	(260)
#endif

#ifdef CY_SYS_WINDOWS
#define snprintf _snprintf 
#endif

#ifdef CY_SYS_WINDOWS
#define INLINE inline
#else
#define INLINE __inline
#endif

#endif

